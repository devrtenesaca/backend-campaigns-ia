# backend/app/core/domain/repositories/campaign_repository.py
from abc import ABC, abstractmethod
from typing import Optional, List
from app.core.domain.entities.campaign import Campaign

class CampaignRepository(ABC):
    @abstractmethod
    def create(self, data: dict) -> Campaign: ...
    @abstractmethod
    def get(self, campaign_id: int) -> Optional[Campaign]: ...
    @abstractmethod
    def get_by_name(self, name: str) -> Optional[Campaign]: ...
    @abstractmethod
    def list(self, q: Optional[str], limit: int, offset: int) -> List[Campaign]: ...
    @abstractmethod
    def update(self, campaign_id: int, data: dict) -> Campaign: ...
    @abstractmethod
    def delete(self, campaign_id: int) -> None: ...
